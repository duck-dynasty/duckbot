name: DuckBot CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Setup Virtual Environment Cache
      id: venv
      uses: actions/cache@v2
      with:
        path: venv
        key: ${{ env.pythonLocation }}-venv-${{ hashFiles('setup.py') }}

    - name: Install Packages
      if: steps.venv.outputs.cache-hit != 'true'
      run: |
        python -m venv --clear venv
        . ./venv/bin/activate
        pip install --upgrade pip setuptools wheel
        pip install --editable .[dev]
    - name: Run Tests
      run: |
        . venv/bin/activate
        pytest
    - name: Report Code Coverage
      if: ${{ always() }}
      uses: codecov/codecov-action@v1

  sanity:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Test Connection to Discord
      run: |
        docker-compose run --rm \
          -e 'DUCKBOT_ARGS=connection-test' \
          -e "DISCORD_TOKEN=$(cat .github/workflows/test-token.txt | base64 --decode)" \
          duckbot

  deploy:
    needs:
    - release
    - sanity
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 'Chippers255/duckbot'
    concurrency: docker-image-build
    steps:
    - uses: actions/checkout@v2

    - name: Set up QEMU for ARM Platforms
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Set up Docker Build Cache
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: ${{ runner.os }}-buildx-

    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: chippers255
        password: ${{ secrets.DOCKER_PASS }}
    - name: Build and Push Docker Image
      run: |
        docker buildx bake \
          --set '*.platform=linux/arm/v7' \
          --push \
          --set '*.cache-from=type=local,src=/tmp/.buildx-cache' \
          --set '*.cache-to=type=local,dest=/tmp/.buildx-cache'

    - name: Trigger Deployment
      run: |
        curl -X POST https://api.github.com/repos/${{ secrets.DEPLOY_REPO }}/dispatches \
          -u "${{ secrets.ACCESS_TOKEN }}" \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Content-Type: application/json" \
          --data '{"event_type": "deploy-duckbot"}'
