name: DuckBot CI

on:
  push:
    branches:
    - main
    - buildx
  pull_request:
    branches:
    - main

jobs:
  # release:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Set up Python 3.8
  #     uses: actions/setup-python@v2
  #     with:
  #       python-version: '3.8'

  #   - name: Setup Pip Cache
  #     uses: actions/cache@v2
  #     with:
  #       path: ${{ env.pythonLocation }}
  #       key: ${{ env.pythonLocation }}-${{ hashFiles('setup.py') }}
  #       restore-keys: ${{ env.pythonLocation }}-
  #   - name: Setup FFmpeg
  #     uses: FedericoCarboni/setup-ffmpeg@v1

  #   - name: Install Packages
  #     run: |
  #       pip install --upgrade pip setuptools wheel
  #       pip install --editable .[dev]
  #   - name: Run Tests
  #     run: pytest

  # sanity:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - name: Test Connection to Discord
  #     run: |
  #       docker-compose run --rm \
  #       -e 'DUCKBOT_ARGS=connection-test' \
  #       -e "DISCORD_TOKEN=$(cat .github/workflows/test-token.txt | base64 --decode)" \
  #       duckbot

  deploy:
    # needs:
    # - release
    # - sanity
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && github.repository == 'Chippers255/duckbot'
    steps:
    # docker login can only happen once; force wait for previous runs before continuing
    - name: block concurrent workflow executions
      uses: softprops/turnstyle@v1
      with:
        poll-interval-seconds: 60
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: actions/checkout@v2
    - name: Set up QEMU for ARM docker platforms
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: twentylemon
        password: ${{ secrets.DOCKER_PASS }}
    - name: Build and Push Docker Image
      run: docker buildx bake --set '*.platform=linux/amd64,linux/arm64,linux/386,linux/arm/v7,linux/arm/v6' --push

    # - name: Trigger Deployment
    #   run: |
    #     curl -X POST https://api.github.com/repos/${{ secrets.DEPLOY_REPO }}/dispatches \
    #       -u "${{ secrets.ACCESS_TOKEN }}" \
    #       -H "Accept: application/vnd.github.everest-preview+json" \
    #       -H "Content-Type: application/json" \
    #       --data '{"event_type": "deploy-duckbot"}'
