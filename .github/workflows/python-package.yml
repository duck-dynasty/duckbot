# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: DuckBot CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Setup Pip Cache
      uses: actions/cache@v2
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: ${{ env.pythonLocation }}-
    - name: Setup FFmpeg
      uses: FedericoCarboni/setup-ffmpeg@v1

    - name: Install Dependencies
      run: . scripts/build/install.sh actions
    - name: Run Tests
      run: . scripts/build/test.sh
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Build DuckBot Docker Image
      uses: docker/build-push-action@v2
      with:
        context: .
        tags: chippers255/duckbot:latest
        push: false
        load: true
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new

    - name: Test Connection to Discord
      run: |
        docker-compose run --rm \
        -e 'DUCKBOT_ARGS=connection-test' \
        -e "DISCORD_TOKEN=$(cat .github/workflows/test-token.txt | base64 --decode)" \
        duckbot

    # see https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md
    - name: Move Docker Cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  deploy:
    needs: release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.repository == 'Chippers255/duckbot'
    steps:
    - name: Trigger Deployment
      run: |
        curl -X POST https://api.github.com/repos/${{ secrets.DEPLOY_REPO }}/dispatches \
          -u "${{ secrets.ACCESS_TOKEN }}" \
          -H "Accept: application/vnd.github.everest-preview+json" \
          -H "Content-Type: application/json" \
          --data '{"event_type": "deploy-duckbot"}'
