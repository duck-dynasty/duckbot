name: DuckBot CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
#  release:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Set up Python 3.8
#      uses: actions/setup-python@v2
#      with:
#        python-version: '3.8'
#
#    - name: Setup Virtual Environment Cache
#      id: venv
#      uses: actions/cache@v2
#      with:
#        path: venv
#        key: ${{ env.pythonLocation }}-venv-${{ hashFiles('setup.py') }}
#
#    - name: Install Packages
#      if: steps.venv.outputs.cache-hit != 'true'
#      run: |
#        python -m venv --clear venv
#        . ./venv/bin/activate
#        pip install --upgrade pip setuptools wheel
#        pip install --editable .[dev]
#    - name: Run Tests
#      run: |
#        . venv/bin/activate
#        pytest
#    - name: Report Code Coverage
#      if: ${{ always() }}
#      uses: codecov/codecov-action@v1
#
#  sanity:
#    runs-on: ubuntu-latest
#    steps:
#    - uses: actions/checkout@v2
#    - name: Test Connection to Discord
#      run: |
#        docker-compose run --rm \
#          -e 'DUCKBOT_ARGS=connection-test' \
#          -e "DISCORD_TOKEN=$(cat .github/workflows/test-token.txt | base64 --decode)" \
#          duckbot

  # FIXME only run on push
  aws-deploy:
    runs-on: ubuntu-latest
    concurrency: deploy
    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Set up Docker Build Cache
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: ${{ runner.os }}-buildx-

    # FIXME login as chippers
    - name: Login to Docker
      uses: docker/login-action@v1
      with:
        username: twentylemon
        password: ${{ secrets.DOCKER_PASS }}

    # FIXME publish commit specific image
    - name: Build and Push Docker Image
      env:
        COMMIT_SHA: ${{ github.sha }}
      run: |
        docker buildx build . \
          --tag twentylemon/duckbot:latest \
          --platform=linux/amd64 \
          --cache-from='type=local,src=/tmp/.buildx-cache' \
          --cache-to='type=local,dest=/tmp/.buildx-cache' \
          --push

    - name: Publish Wiki Documentation
      uses: SwiftDocOrg/github-wiki-publish-action@v1
      with:
        path: wiki
      env:
        GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        WIKI_COMMIT_MESSAGE: ${{ github.event.commits[0].message }}
        GITHUB_ACTOR: ${{ github.event.commits[0].author.name }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Set up AWS Secrets
      env:
        DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
        OPENWEATHER_TOKEN: ${{ secrets.OPENWEATHER_TOKEN }}
      run: |
        aws ssm put-parameter --name /duckbot/token/discord --type String --value "$DISCORD_TOKEN" --overwrite
        aws ssm put-parameter --name /duckbot/token/openweather --type String --value "$OPENWEATHER_TOKEN" --overwrite

    # FIXME specify commit specific image
    - name: Update CloudFormation Stack
      uses: aws-actions/aws-cloudformation-github-deploy@v1
      with:
        name: duckbot
        template: .aws/cloudformation.template.yml
        parameter-overrides: "DuckBotImageTag=latest"
        capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM

#  deploy:
#    needs:
#    - release
#    - sanity
#    runs-on: ubuntu-latest
#    if: github.event_name == 'push' && github.repository == 'Chippers255/duckbot'
#    concurrency: docker-image-build
#    steps:
#    - uses: actions/checkout@v2
#
#    - name: Set up QEMU for ARM Platforms
#      uses: docker/setup-qemu-action@v1
#    - name: Set up Docker Buildx
#      uses: docker/setup-buildx-action@v1
#    - name: Set up Docker Build Cache
#      uses: actions/cache@v2
#      with:
#        path: /tmp/.buildx-cache
#        key: ${{ runner.os }}-buildx-${{ github.sha }}
#        restore-keys: ${{ runner.os }}-buildx-
#
#    - name: Login to Docker
#      uses: docker/login-action@v1
#      with:
#        username: chippers255
#        password: ${{ secrets.DOCKER_PASS }}
#    - name: Build and Push Docker Image
#      run: |
#        docker buildx bake \
#          --set '*.platform=linux/arm/v7' \
#          --push \
#          --set '*.cache-from=type=local,src=/tmp/.buildx-cache' \
#          --set '*.cache-to=type=local,dest=/tmp/.buildx-cache'
#
#    - name: Publish Wiki Documentation
#      uses: SwiftDocOrg/github-wiki-publish-action@v1
#      with:
#        path: wiki
#      env:
#        GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
#        WIKI_COMMIT_MESSAGE: ${{ github.event.commits[0].message }}
#        GITHUB_ACTOR: ${{ github.event.commits[0].author.name }}
#
#    - name: Trigger Deployment
#      run: |
#        curl -X POST $GITHUB_API_URL/repos/${{ secrets.DEPLOY_REPO }}/dispatches \
#          -u "${{ secrets.ACCESS_TOKEN }}" \
#          -H "Accept: application/vnd.github.everest-preview+json" \
#          -H "Content-Type: application/json" \
#          --data '{"event_type": "deploy-duckbot"}'
